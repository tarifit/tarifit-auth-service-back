name: Create Branch and PR from Jira Issue
on:
  issues:
    types: [opened]

jobs:
  create-branch-and-pr:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.body, 'Jira') || contains(github.event.issue.title, 'SCRUM-') || contains(github.event.issue.title, 'TEST-')
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_TOKEN }}
          fetch-depth: 0
      
      - name: Debug - Log Issue Data
        run: |
          echo "=== ISSUE EVENT ==="
          echo '${{ toJson(github.event.issue) }}'
          echo ""
          echo "=== ISSUE FIELDS ==="
          echo "Title: ${{ github.event.issue.title }}"
          echo "Body: ${{ github.event.issue.body }}"
          echo "User: ${{ github.event.issue.user.login }}"
          echo "Number: ${{ github.event.issue.number }}"
          
      - name: Create Branch Name
        id: branch
        run: |
          # Create branch name from issue title (similar to Jira format)
          BRANCH_NAME=$(echo "${{ github.event.issue.title }}" | sed 's/[^a-zA-Z0-9]/-/g' | tr '[:upper:]' '[:lower:]' | sed 's/--*/-/g' | sed 's/^-\|-$//g')
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          
      - name: Create Branch
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git checkout -b ${{ env.BRANCH_NAME }}
          git commit --allow-empty -m "Initialize branch for issue #${{ github.event.issue.number }}"
          git push origin ${{ env.BRANCH_NAME }}
          
      - name: Create Pull Request
        run: |
          # Create PR body with issue information
          cat > pr_body.md << 'EOF'
          ## GitHub Issue: #${{ github.event.issue.number }}
          
          **Title:** ${{ github.event.issue.title }}
          **Author:** @${{ github.event.issue.user.login }}
          **Branch:** ${{ env.BRANCH_NAME }}
          
          ## Original Issue Description
          
          ${{ github.event.issue.body }}
          
          ---
          
          ### Implementation Instructions
          
          **Steps to complete:**
          1. Switch to branch: ${{ env.BRANCH_NAME }}
          2. Implement the requirements described in the issue
          3. Follow technical specifications and acceptance criteria
          4. Add appropriate unit tests
          5. Commit changes with descriptive messages
          6. Push commits to this branch
          
          **Issue Link:** ${{ github.event.issue.html_url }}
          EOF
          
          # Create PR using jq for proper JSON escaping
          jq -n \
            --arg title "${{ github.event.issue.title }}" \
            --arg body "$(cat pr_body.md)" \
            --arg head "${{ env.BRANCH_NAME }}" \
            --arg base "master" \
            '{title: $title, body: $body, head: $head, base: $base}' | \
          curl -X POST \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            -d @- \
            "https://api.github.com/repos/${{ github.repository }}/pulls"
            
      - name: Comment on Issue
        run: |
          jq -n \
            --arg body "ðŸš€ **Branch and PR Created**\n\n- **Branch:** \`${{ env.BRANCH_NAME }}\`\n- **PR:** Ready for implementation\n\nAll commits should be made to the \`${{ env.BRANCH_NAME }}\` branch." \
            '{body: $body}' | \
          curl -X POST \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            -d @- \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments"
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
