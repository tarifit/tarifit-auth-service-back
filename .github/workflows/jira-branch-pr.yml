name: Create PR from Jira Branch
on:
  repository_dispatch:
    types: [create-branch]

jobs:
  create-pr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_TOKEN }}
          fetch-depth: 0
      
      - name: Debug - Log Jira Payload
        run: |
          echo "=== FULL GITHUB EVENT ==="
          echo '${{ toJson(github.event) }}'
          echo ""
          echo "=== CLIENT PAYLOAD ONLY ==="
          echo '${{ toJson(github.event.client_payload) }}'
          echo ""
          echo "=== INDIVIDUAL FIELDS ==="
          echo "Event Type: ${{ github.event.action }}"
          echo "Branch Name: ${{ github.event.client_payload.branch_name }}"
          echo "Summary: ${{ github.event.client_payload.summary }}"
          echo "Description: ${{ github.event.client_payload.description }}"
          echo "Issue Key: ${{ github.event.client_payload.issue_key }}"
          echo "Assignee: ${{ github.event.client_payload.assignee }}"
          echo "Jira URL: ${{ github.event.client_payload.jira_url }}"
          
      - name: Create Pull Request
        run: |
          # Create PR body with Jira information
          cat > pr_body.md << 'EOF'
          ## Jira Ticket Information
          
          **Branch:** ${{ github.event.client_payload.branch_name }}
          **Summary:** ${{ github.event.client_payload.summary }}
          **Description:** ${{ github.event.client_payload.description }}
          **Assignee:** ${{ github.event.client_payload.assignee }}
          **Issue Key:** ${{ github.event.client_payload.issue_key }}
          **Jira URL:** ${{ github.event.client_payload.jira_url }}
          
          ---
          
          ### Implementation Instructions
          
          **Steps to complete:**
          1. Switch to branch: ${{ github.event.client_payload.branch_name }}
          2. Implement the requirements described above
          3. Follow technical specifications and acceptance criteria
          4. Add appropriate unit tests
          5. Commit changes with descriptive messages
          6. Push commits to this branch
          EOF
          
          # Create PR using jq for proper JSON escaping
          jq -n \
            --arg title "${{ github.event.client_payload.summary || github.event.client_payload.branch_name || 'Jira Task' }}" \
            --arg body "$(cat pr_body.md)" \
            --arg head "${{ github.event.client_payload.branch_name }}" \
            --arg base "master" \
            '{title: $title, body: $body, head: $head, base: $base}' | \
          curl -X POST \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            -d @- \
            "https://api.github.com/repos/${{ github.repository }}/pulls"
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
